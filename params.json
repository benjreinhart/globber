{"name":"Globber","tagline":"Wrapper around node-glob with a friendly DSL","body":"# Globber\r\n\r\n[![Build Status](https://travis-ci.org/benjreinhart/globber.png)](https://travis-ci.org/benjreinhart/globber)\r\n\r\nWrapper around [node-glob](https://github.com/isaacs/node-glob) with a friendly DSL.\r\n\r\nCheck out the [examples below](#examples).\r\n\r\n## Install\r\n\r\n`npm install globber`\r\n\r\n## API\r\n\r\n### globber(path[, options], callback)\r\n\r\n`path` can be a base path to begin searching from or a glob string or an array of base paths and/or glob strings.\r\n\r\n`options` can be the following\r\n\r\n* `absolute` {Boolean} - If `true`, all paths returned will be absolute, regardless of the initial path\r\n* `extension` {String} - Only search for files with extension `extension`\r\n* `exclude` {String|Array} - Either a path or array of paths to be excluded from the result set\r\n* `recursive` {Boolean} - If `false`, will only search for files one level deep\r\n* `includeDirectories` {Boolean} - if `false`, the resulting `paths` array will only include paths to files, not paths to directories\r\n\r\nAny options passed to globber not listed above will be passed to [node-glob](https://github.com/isaacs/node-glob).\r\n\r\n`callback` function takes `err` and `paths` arguments.\r\n\r\n### globber.sync(path[, options])\r\n\r\nSynchronous version of `globber`.\r\n\r\n## Examples\r\n\r\nFor a more elaborate set of examples, check out the [tests](https://github.com/benjreinhart/globber/tree/master/test/tests).\r\n\r\nGive the current directory structure:\r\n\r\n```\r\n/Users/ben\r\n  └ project\r\n      └ templates\r\n          └ sessions\r\n              └ info.txt\r\n                login.mustache\r\n            users\r\n              └ index.mustache\r\n                info.txt\r\n                show.mustache\r\n```\r\n\r\nand a current working directory of `/Users/ben`:\r\n\r\n<hr />\r\n\r\nPerform a recursive search for all files in the `project/templates` directory relative to the current working directory:\r\n\r\n```javascript\r\nglobber('project/templates', function(err, paths){\r\n  console.log(paths);\r\n});\r\n/*\r\n  [\r\n    'project/templates/sessions',\r\n    'project/templates/sessions/info.txt',\r\n    'project/templates/sessions/login.mustache',\r\n    'project/templates/users',\r\n    'project/templates/users/index.mustache',\r\n    'project/templates/users/info.txt',\r\n    'project/templates/users/show.mustache'\r\n  ]\r\n*/\r\n```\r\n\r\n<hr />\r\n\r\nDo the same as the above but exclude certain paths and return all paths as absolute paths:\r\n\r\n```javascript\r\nvar pathsToExclude = ['project/templates/users/info.txt', 'project/templates/sessions/info.txt'];\r\nglobber('project/templates', {absolute: true, exclude: pathsToExclude}, function(err, paths){\r\n  console.log(paths);\r\n});\r\n/*\r\n  [\r\n    '/Users/ben/project/templates/sessions',\r\n    '/Users/ben/project/templates/sessions/login.mustache',\r\n    '/Users/ben/project/templates/users',\r\n    '/Users/ben/project/templates/users/index.mustache',\r\n    '/Users/ben/project/templates/users/show.mustache'\r\n  ]\r\n*/\r\n```\r\n\r\n<hr />\r\n\r\nScope the recursive search only to files with a \"mustache\" extension in the `project/templates` directory relative to the current working directory:\r\n\r\n```javascript\r\nglobber('project/templates', {extension: 'mustache'}, function(err, paths){\r\n  console.log(paths);\r\n});\r\n/*\r\n  [\r\n    'project/templates/sessions',\r\n    'project/templates/sessions/login.mustache',\r\n    'project/templates/users',\r\n    'project/templates/users/index.mustache',\r\n    'project/templates/users/show.mustache'\r\n  ]\r\n*/\r\n```\r\n\r\n<hr />\r\n\r\nSearch multiple directories:\r\n\r\n```javascript\r\nglobber(['project/templates/sessions', 'project/templates/users'], function(err, paths){\r\n  console.log(paths);\r\n});\r\n/*\r\n  [\r\n    'project/templates/sessions',\r\n    'project/templates/sessions/info.txt',\r\n    'project/templates/sessions/login.mustache',\r\n    'project/templates/users',\r\n    'project/templates/users/index.mustache',\r\n    'project/templates/users/info.txt',\r\n    'project/templates/users/show.mustache'\r\n  ]\r\n*/\r\n```\r\n\r\n<hr />\r\n\r\nOnly search in the directory provided, not in any sub directories:\r\n\r\n```javascript\r\nglobber('project/templates', {recursive: false}, function(err, paths){\r\n  console.log(paths);\r\n});\r\n/*\r\n  [\r\n    'project/templates/sessions',\r\n    'project/templates/users'\r\n  ]\r\n*/\r\n```\r\n\r\n<hr />\r\n\r\nOnly return paths that are files (will remove paths of directories from the result set):\r\n\r\n```javascript\r\nglobber('project/templates', {includeDirectories: false}, function(err, paths){\r\n  console.log(paths);\r\n});\r\n/*\r\n  [\r\n    'project/templates/sessions/info.txt',\r\n    'project/templates/sessions/login.mustache',\r\n    'project/templates/users/index.mustache',\r\n    'project/templates/users/info.txt',\r\n    'project/templates/users/show.mustache'\r\n  ]\r\n*/\r\n```\r\n\r\n<hr />\r\n\r\nPass a glob string directly:\r\n\r\n```javascript\r\nglobber('project/templates/**/*.mustache', function(err, paths){\r\n  console.log(paths);\r\n});\r\n/*\r\n  [\r\n    'project/templates/sessions',\r\n    'project/templates/sessions/login.mustache',\r\n    'project/templates/users',\r\n    'project/templates/users/index.mustache',\r\n    'project/templates/users/show.mustache'\r\n  ]\r\n*/\r\n```\r\n\r\n## License\r\n\r\n[MIT](https://github.com/benjreinhart/globber/blob/master/LICENSE.txt)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}