// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var async, globPath, utils;
  utils = require('./utils');
  async = require('async');
  module.exports = function (paths, options, callback) {
    var iterator;
    if ('function' === typeof options) {
      callback = options;
      options = {};
    }
    if (utils.isString(paths))
      return globPath(paths, options, callback);
    iterator = function (accum, path, cb) {
      return globPath(path, options, function (err, paths) {
        if (null != err)
          return cb(err);
        return cb(null, accum.concat(paths));
      });
    };
    async.reduce(paths, [], iterator, callback);
  };
  globPath = function (path, options, cb) {
    var pattern;
    pattern = utils.getGlobPattern(path, options);
    utils.glob(pattern, options, function (err, paths) {
      if (null != err)
        return cb(err);
      if (options.includeDirectories === false)
        paths = paths.filter(utils.isFile);
      return cb(null, paths);
    });
  };
}.call(this);
